name: Deploy to Azure Web App

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  NODE_VERSION: '20.x'
  APP_DIR: 'certificate_download_site-ui'
  AZURE_WEBAPP_PACKAGE_PATH: 'dist'

concurrency:
  group: deploy-azure-webapp
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Detect app directory
        id: detect-dir
        shell: bash
        run: |
          if [ -f "certificate_download_site-ui/package.json" ] && [ -f "certificate_download_site-ui/vite.config.js" ]; then
            echo "app_dir=certificate_download_site-ui" >> $GITHUB_OUTPUT
          else
            echo "app_dir=." >> $GITHUB_OUTPUT
          fi

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Install dependencies
        shell: bash
        run: |
          APP_DIR="${{ steps.detect-dir.outputs.app_dir }}"
          if [ "$APP_DIR" = "." ]; then
            npm ci
          else
            npm --prefix "$APP_DIR" ci
          fi

      - name: Build application
        shell: bash
        run: |
          APP_DIR="${{ steps.detect-dir.outputs.app_dir }}"
          if [ "$APP_DIR" = "." ]; then
            npm run build
          else
            npm --prefix "$APP_DIR" run build
          fi

      - name: Prepare dist artifact (copy build and web.config)
        shell: bash
        run: |
          set -e
          APP_DIR="${{ steps.detect-dir.outputs.app_dir }}"
          # Determine where Vite wrote the build (depends on outDir and APP_DIR)
          if [ "$APP_DIR" = "." ]; then
            SRC="../dist"
          else
            SRC="dist"
          fi
          mkdir -p dist
          if [ "$SRC" != "dist" ] && [ -d "$SRC" ]; then
            shopt -s dotglob nullglob
            cp -R "$SRC"/* dist/
            shopt -u dotglob nullglob
          fi
          # Ensure SPA fallback web.config is present
          WEB_SRC="$APP_DIR/public/web.config"
          if [ -f "$WEB_SRC" ]; then
            cp -f "$WEB_SRC" dist/web.config
          fi

      - name: Upload artifact for deployment
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name != 'pull_request'
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
